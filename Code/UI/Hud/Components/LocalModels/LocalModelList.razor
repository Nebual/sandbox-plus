@using Sandbox;
@using Sandbox.UI;
@inherits Panel
@namespace Sandbox.UI
@attribute [StyleSheet]

<root class="spawnpage columned">
	<div class="search-container">
		<MenuTextEntry @ref="SearchEntry" OnTextEdited=@Search Placeholder="Search..." />
		<div class="folderlist">
			<div class="entry @(SelectedFolder == "" ? "selected" : "")" onclick=@ResetFolder>
				<i>category</i>
				All Models
			</div>
			<FileTree class="root-file-tree" FileFilter="*.vmdl_c" Selected=@(SelectedFolder) Root=@(true) FileSystem=@(FileSystem.Mounted) Path=@("") ShowFiles=@(false) OnFolderSelect=@OnFolderSelect />
		</div>
	</div>
	<div class="canvas">
		@foreach (var model in ModelList)
		{
			<LocalModelEntry Model=@model />
		}
	</div>
</root>

@code
{
	MenuTextEntry SearchEntry;
	string SelectedFolder = "";
	string SearchQuery = "";
	List<Model> ModelList = new();
	List<string> BlockedModels = new()
	{
		"models/avatareditorscene.vmdl_c",
		"models/citizen_human/heads/citizen_human_malehead01/citizen_human_malehead01.vmdl_c",
		"models/citizen_human/citizen_human_female_staging.vmdl_c",
		"models/citizen_human/citizen_human_male_staging.vmdl_c",
		"models/hammer/env_sea.vmdl_c",
		"models/hand_adapter_valvebiped_to_sbox/hand_adapter_valvebiped_to_sbox.vmdl_c",
		"materials/models/editor/point_aimat.vmdl_c",
		"materials/models/editor/proxy_helper.vmdl_c",
	};

	protected override void OnAfterTreeRender(bool firstTime)
	{
		if (firstTime)
		{
			Search("");
		}
	}

	void OnFolderSelect(string folderPath)
	{
		SelectedFolder = folderPath;
		Search(SearchQuery);
	}

	void ResetFolder()
	{
		SelectedFolder = "";
		Search(SearchQuery);
	}

	void Search(string value)
	{
		SearchQuery = value;
		ModelList.Clear();

		var files = FileSystem.Mounted.FindFile(SelectedFolder, "*.vmdl_c", true);
		foreach (var file in files)
		{
			if (BlockedModels.Contains(file)) continue;
			if (string.IsNullOrWhiteSpace(file)) continue;
			if (string.IsNullOrWhiteSpace(SearchQuery))
			{
				if (file.Contains("_lod0")) continue;
				if (file.Contains("clothes") || file.StartsWith("models/citizen/skin/")) continue;
				if (file.Contains("_gib") || file.Contains("/piece")) continue;
				if (file.StartsWith("models/dev") || file.StartsWith("models/editor") || file.StartsWith("models/vr") || file.StartsWith("models/first_person")) continue;
			}
			else
			{
				if (!file.Contains(SearchQuery)) continue;
			}

			var model = Model.Load(SelectedFolder + file);
			if (model is not null)
			{
				ModelList.Add(model);
			}
		}
	}
}