@using System
@using Sandbox.Razor
@namespace Sandbox.UI

<root>
	@if (Value)
	{
		<span class="checkbox checked">
			<i>check</i>
		</span>
	}
	else
	{
		<span class="checkbox unchecked">
			<i style="color: transparent;">square</i>
		</span>
	}
	</span>
    <label>@Label</label>
</root>

@code
{
    public Action<bool> OnValueChanged { get; set; }
    /// <summary>
    /// The convar to bind to. Handles Value/OnValueChanged
    /// </summary>
    public string Convar { get; set; } = "";
    public string Label = "";

    public bool Value = false;

    public SerializedProperty SerializedProperty
    {
        get => _property;
        set
        {
            _property = value;
            Value = _property.GetValue<bool>();
        }
    }
    SerializedProperty _property;

    protected override Task OnParametersSetAsync()
    {
	    if (Convar != "")
        {
            Value = ConsoleSystem.GetValue(Convar, "0") != "0";
        }

	    return Task.CompletedTask;
    }

    public void DoValueChanged( )
    {
        if (Convar != "")
        {
            ConsoleSystem.SetValue( Convar, Value ? "1" : "0" );
        }
        OnValueChanged?.Invoke(Value);
    }

    protected override void OnClick( MousePanelEvent e )
    {
        base.OnClick( e );

        Value = !Value;
        DoValueChanged();
        e.StopPropagation();
    }

    protected override void OnMouseDown( MousePanelEvent e )
    {
        e.StopPropagation();
    }
}

<style>
ToolCheckbox {
    margin-bottom: 5px;
    align-items: center;
	.checkbox {
		padding: 1px;
		background-color: #eee;
	}
	label {
		margin-left: 4px;
	}
}
</style>
