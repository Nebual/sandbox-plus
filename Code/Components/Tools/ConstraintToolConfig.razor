@using Sandbox.UI
@using Sandbox.Tools
@using SandboxPlus.Tools
@namespace Sandbox.UI
@inherits Panel
@attribute [ToolInspector(typeof(ConstraintTool))]

<root class="DefaultToolInspector">
    <label class="header">@CurrentTool.GetCurrentTool()?.Name</label>
<div class="content">
	<div class="list">
		@foreach ( var type in Enum.GetValues<ConstraintType>() )
		{
			<div
				class="@(type.ToString() == ConsoleSystem.GetValue( "tool_constraint_type", "Weld" ) ? "list_option active" : "list_option")"
				onclick="@( () => OnTypeClicked(type) )"
			>
				@(type.ToString())
			</div>
		}
	</div>
	@if (ConsoleSystem.GetValue("tool_constraint_type", "Weld") == ConstraintType.Rope.ToString())
	{
		<Slider
			Label="Rope Extra Length"
			Min=@(0f)
			Max=@(1000f)
			Step=@(1f)
			Convar="tool_constraint_rope_extra_length"
		/>
		<ToolCheckbox
			Label="Rigid Rope"
			Convar="tool_constraint_rope_rigid"
			style="margin-bottom: 15px;"
		/>
	}
	<Slider
		Label="Nudge Distance"
		Min=@(0.125f)
		Max=@(100f)
		Step=@(0.125f)
		Convar="tool_constraint_nudge_distance"
	/>
	<ToolCheckbox
		Label="Nudge as Percent (%) of prop width"
		Convar="tool_constraint_nudge_percent"
		style="margin-bottom: 15px;"
	/>
	@if (!IsTypeNocollide()) {
		<ToolCheckbox Label="Move Target?" Convar="tool_constraint_move_target" />
		@if (ConsoleSystem.GetValue("tool_constraint_move_target", "0") != "0")
		{
			<Slider
				Label="Movement Offset"
				Min=@(-100f)
				Max=@(100f)
				Step=@(5f)
				Convar="tool_constraint_move_offset"
			/>
			<ToolCheckbox
				Label="Offset as Percent (%) of prop width"
				Convar="tool_constraint_move_percent"
				style="margin-bottom: 20px;"
			/>
		}
		<ToolCheckbox
			Label="Rotate Target? (after moving)"
			Convar="tool_constraint_rotate_target"
		/>
		@if ( ConsoleSystem.GetValue( "tool_constraint_rotate_target", "0" ) != "0" )
		{
			<Slider
				Label="Rotation Snap Amount"
				Min=@(0f)
				Max=@(90f)
				Step=@(5f)
				Convar="tool_constraint_rotate_snap"
			/>
		}
	}
	<ToolCheckbox
		Label="Freeze Target"
		Convar="tool_constraint_freeze_target"
	/>
	@if ( !IsTypeNocollide() )
	{
		<ToolCheckbox
			Label="No Collide Targets"
			Convar="tool_constraint_nocollide_target"
		/>
	}
	<!-- Autorotate to World? -->
</div>
</root>

@code {
	public void OnTypeClicked(ConstraintType constraintType)
	{
		ConsoleSystem.Run( "tool_constraint_type " + constraintType.ToString() );
	}

	public bool IsTypeNocollide()
	{
		return ConsoleSystem.GetValue( "tool_constraint_type", "Weld" ) == ConstraintType.Nocollide.ToString();
	}
}

<style>
ConstraintToolConfig {
	.list {
		flex-direction: column;
		margin-bottom: 10px;
		padding: 5px;
		.list_option {
			padding: 2px 0;
			font-size: 12px;
			align-items: center;
			font-weight: 600;
			opacity: 0.75;
			cursor: pointer;
			label {
				text-shadow: 1px 1px 4px rgba(black, 0.2);
			}

			&:hover {
				opacity: 0.9;
			}

			&.active {
				transform: scale(1);
				opacity: 1;
			}
		}
	}
}
</style>
